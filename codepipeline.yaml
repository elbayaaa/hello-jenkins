AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  GitRepoProvider:
    Type: String
    Default: GitHub
  GitRepoId:
    Type: String
    Default: elbayaaa/aws-sam-cli
  GitRepoBranch:
    Type: String
    Default: main
  GitRepoAuthToken:
    Type: String
    Default: ???
  PipelineRole: # bootstrapped. can assume anything, can be assumed by codepipeline and codebuild services
    Type: String
    Default: arn:aws:iam::933053586455:role/PipelineRole

  BetaBuildArtifactsBucket:
    Type: String
    Default: aws-sam-cli-managed-beta-pipeline-artifactsbucket-fu7yxiou28ql
  BetaCloudFormationExecutionRole:
    Type: String
    Default: arn:aws:iam::933053586455:role/aws-sam-cli-managed-beta-CloudFormationExecutionR-RSV0G3S6LUO5
  BetaPipelineExecutionRole:
    Type: String
    Default: arn:aws:iam::933053586455:role/aws-sam-cli-managed-beta-pip-PipelineExecutionRole-1EHAAFO5RQP8W
  BetaRegion:
    Type: String
    Default: us-west-2
  BetaStackName:
    Type: String
    Default: beta-stack

  ProdBuildArtifactsBucket:
    Type: String
    Default: aws-sam-cli-managed-prod-pipeline-artifactsbucket-btlknr1j21lb
  ProdCloudFormationExecutionRole:
    Type: String
    Default: arn:aws:iam::642267663163:role/aws-sam-cli-managed-prod-CloudFormationExecutionR-1CEVI2XRS6C3R
  ProdPipelineExecutionRole:
    Type: String
    Default: arn:aws:iam::642267663163:role/aws-sam-cli-managed-prod-pip-PipelineExecutionRole-1D3H7WF8K7SKI
  ProdRegion:
    Type: String
    Default: us-east-1
  ProdStackName:
    Type: String
    Default: prod-stack

Resources:

  GitRepoConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub "${GitRepoProvider}-Connection"
      ProviderType: !Ref GitRepoProvider

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStores:
        - Region: !Ref BetaRegion
          ArtifactStore:
            Location: !Ref BetaBuildArtifactsBucket
            Type: S3
        - Region: !Ref ProdRegion
          ArtifactStore:
            Location: !Ref ProdBuildArtifactsBucket
            Type: S3
      RoleArn: !Ref PipelineRole
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !Ref GitRepoConnection
                FullRepositoryId: !Ref GitRepoId
                BranchName: !Ref GitRepoBranch
              OutputArtifacts:
                - Name: SourceCodeAsZip
        - Name: UpdatePipeline
          Actions:
            - Name: CreateChangeSet
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CodePipelineCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-CreateUpdatePipelineChangeSet
                TemplatePath: SourceCodeAsZip::codepipeline.yaml
                Capabilities: CAPABILITY_NAMED_IAM
              InputArtifacts:
                - Name: SourceCodeAsZip
            - Name: ExecuteChangeSet
              RunOrder: 2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CodePipelineCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-CreateUpdatePipelineChangeSet
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}CreateUpdatePipelineChangeSet
        - Name: BuildAndPackage
          Actions:
            - Name: CodeBuild
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip
        - Name: DeployToTest
          Actions:
            - Name: CreateTestDeploymentChangeSet
              RunOrder: 1
              Region: !Ref BetaRegion
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ChangeSetName: !Sub ${BetaStackName}-CreateUpdateStackChangeSet
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Ref BetaStackName
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: BuildArtifactAsZip::packaged-beta.yaml
                RoleArn: !Ref BetaCloudFormationExecutionRole
              InputArtifacts:
                - Name: BuildArtifactAsZip
              RoleArn: !Ref BetaPipelineExecutionRole
            - Name: ExecuteTestDeploymentChangeSet
              RunOrder: 2
              Region: !Ref BetaRegion
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ChangeSetName: !Sub ${BetaStackName}-CreateUpdateStackChangeSet
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Ref BetaStackName
                RoleArn: !Ref BetaCloudFormationExecutionRole
              InputArtifacts:
                - Name: BuildArtifactAsZip
              RoleArn: !Ref BetaPipelineExecutionRole
        - Name: DeployToProd
          Actions:
            - Name: CreateProdDeploymentChangeSet
              RunOrder: 1
              Region: !Ref ProdRegion
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ChangeSetName: !Sub ${ProdStackName}-CreateUpdateStackChangeSet
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Ref ProdStackName
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: BuildArtifactAsZip::packaged-prod.yaml
                RoleArn: !Ref ProdCloudFormationExecutionRole
              InputArtifacts:
                - Name: BuildArtifactAsZip
              RoleArn: !Ref ProdPipelineExecutionRole
            - Name: ExecuteProdDeploymentChangeSet
              RunOrder: 2
              Region: !Ref ProdRegion
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ChangeSetName: !Sub ${ProdStackName}-CreateUpdateStackChangeSet
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Ref ProdStackName
                RoleArn: !Ref ProdCloudFormationExecutionRole
              InputArtifacts:
                - Name: BuildArtifactAsZip
              RoleArn: !Ref ProdPipelineExecutionRole

  CodePipelineCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
      Policies:
        - PolicyName: Administrative
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

  PipelineRoleCodePipelinePermissionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - PipelineRole
      PolicyName: CodePipelinePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow # TODO DELETE ME
            Action: "*"
            Resource: "*"
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/CodeBuildProject*"
          - Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:GetObjectVersion"
              - "s3:PutObject"
            Resource:
              - !Sub "arn:aws:s3:::${BetaBuildArtifactsBucket}/*"
              - !Sub "arn:aws:s3:::${ProdBuildArtifactsBucket}/*"
          - Effect: Allow
            Action: "ssm:GetParameters"
            Resource: "*"
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Resource:
              - !Ref BetaPipelineExecutionRole
              - !Ref ProdPipelineExecutionRole
          - Effect: Allow
            Action: 'iam:PasseRole'
            Resource:
              - !GetAtt CodePipelineCloudFormationExecutionRole.Arn
              - !Ref BetaPipelineExecutionRole # Todo Should the permission be applied there as well?
              - !Ref ProdPipelineExecutionRole # Todo Should the permission be applied there as well?
          - Effect: Allow
            Action:
              - s3:GetBucketAcl
              - s3:GetBucketLocation
            Resource:
              - !Sub arn:aws:s3:::${BetaBuildArtifactsBucket}
              - !Sub arn:aws:s3:::${ProdBuildArtifactsBucket}
          - Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:GetObjectVersion"
              - "s3:PutObject"
            Resource:
              - !Sub arn:aws:s3:::${BetaBuildArtifactsBucket}/*
              - !Sub arn:aws:s3:::${ProdBuildArtifactsBucket}/*
          - Effect: Allow
            Action:
              - "codebuild:StartBuild"
              - "codebuild:BatchGetBuilds"
            Resource:
              - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject}*"
          - Effect: Allow # Todo revisit me
            Action:
              - "cloudformation:CreateStack"
              - "cloudformation:DescribeStacks"
              - "cloudformation:DeleteStack"
              - "cloudformation:UpdateStack"
              - "cloudformation:CreateChangeSet"
              - "cloudformation:ExecuteChangeSet"
              - "cloudformation:DeleteChangeSet"
              - "cloudformation:DescribeChangeSet"
              - "cloudformation:SetStackPolicy"
              - "cloudformation:ValidateTemplate"
            Resource:
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}*/*"
              - !Sub "arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: CodeBuildProject
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
      ServiceRole: !Ref PipelineRole
      Source:
        Type: CODEPIPELINE
        BuildSpec:  |
          version: 0.2
          phases:
            install:
              runtime-versions:
                  python: 3.7
            build:
              commands:
                - pip install --upgrade pip
                - pip install awscli aws-sam-cli
                - sam build
                - . ./assume-role.sh BetaRegion BetaPipelineExecutionRole beta-package
                - sam package --s3-bucket BetaBuildArtifactsBucket --region BetaRegion --output-template-file beta-packaged-testing.yaml
                - . ./assume-role.sh ProdRegion ProdPipelineExecutionRole prod-package
                - sam package --s3-bucket ProdBuildArtifactsBucket --region ProdRegion --output-template-file prod-packaged-testing.yaml
          artifacts:
            files:
              - packaged-beta.yaml
              - packaged-prod.yaml
